{
  "address": "0x64108b11bcBC8342517343e992F7b3177d995804",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_basePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minTokensAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokensAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_privateSaleTokenPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_privateSaleStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_privateSaleEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "coin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "coinAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WITHDRAWAL_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "adminAddPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "adminSetBasePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "name": "adminSetMaxGasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxToken",
          "type": "uint256"
        }
      ],
      "name": "adminSetMaxToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minToken",
          "type": "uint256"
        }
      ],
      "name": "adminSetMinToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "adminSetPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "adminSetTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vestingStart",
          "type": "uint256"
        }
      ],
      "name": "adminSetVestingStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "_flag",
          "type": "bool"
        }
      ],
      "name": "adminSetWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminUnpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ERC20token",
          "type": "address"
        }
      ],
      "name": "adminWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminWithdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "basePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_coin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calcCoinPurchasedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calcEthPurchasedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokensAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTokensAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "privateSaleEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "privateSaleStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "privateSaleTokenPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "coin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "purchaseTokenWithCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseTokenWithETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "purchased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchasedPrivateSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf59ca9fc72fbde18dab7ee048aecb4b24f269ef3f08381a603f0e2ebde4665ae",
  "receipt": {
    "to": null,
    "from": "0x0aA282136b3924ca6767C4D5B9aad6f83bD40A9c",
    "contractAddress": "0x64108b11bcBC8342517343e992F7b3177d995804",
    "transactionIndex": 0,
    "gasUsed": "2503595",
    "logsBloom": "0x
    "blockHash": "0x927eccf97c4da554e9934fec723fdfea83123d418d93837610ae0143628cda73",
    "transactionHash": "0xf59ca9fc72fbde18dab7ee048aecb4b24f269ef3f08381a603f0e2ebde4665ae",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1145061,
        "transactionHash": "0xf59ca9fc72fbde18dab7ee048aecb4b24f269ef3f08381a603f0e2ebde4665ae",
        "address": "0x64108b11bcBC8342517343e992F7b3177d995804",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000aa282136b3924ca6767c4d5b9aad6f83bd40a9c"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x927eccf97c4da554e9934fec723fdfea83123d418d93837610ae0143628cda73"
      }
    ],
    "blockNumber": 1145061,
    "cumulativeGasUsed": "2503595",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0aA282136b3924ca6767C4D5B9aad6f83bD40A9c",
    "0x0aA282136b3924ca6767C4D5B9aad6f83bD40A9c",
    "0xae95d4890bf4471501E0066b6c6244E1CAaEe791",
    "0x7cBa32163a8f4c56C846f5C3685E3b7a450c9002",
    "45000",
    "4150000",
    "22000000000000000000",
    "444445000000000000000000",
    "17333335000000000000000000",
    1651845900,
    1651847700,
    31536000
  ],
  "solcInputHash": "1c6ff8b0627a77f44f9d21156d882052",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTokensAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokensAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_privateSaleTokenPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_privateSaleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_privateSaleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"coin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coinAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminAddPurchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"adminSetBasePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"adminSetMaxGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxToken\",\"type\":\"uint256\"}],\"name\":\"adminSetMaxToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minToken\",\"type\":\"uint256\"}],\"name\":\"adminSetMinToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"adminSetPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"adminSetTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vestingStart\",\"type\":\"uint256\"}],\"name\":\"adminSetVestingStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"adminSetWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ERC20token\",\"type\":\"address\"}],\"name\":\"adminWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calcCoinPurchasedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calcEthPurchasedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTokenPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchaseTokenWithCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseTokenWithETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"purchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchasedPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"adminSetBasePrice(uint256)\":{\"params\":{\"_price\":\"The price of ETH multiple by precision (e.g. _rate = PRECISION corresponds to $1)\"}},\"adminSetMaxGasPrice(uint256)\":{\"params\":{\"_maxGasPrice\":\"New max gas price\"}},\"adminSetMaxToken(uint256)\":{\"params\":{\"_maxToken\":\"New max token amount\"}},\"adminSetMinToken(uint256)\":{\"params\":{\"_minToken\":\"New min token amount\"}},\"adminSetPriceFeed(address)\":{\"params\":{\"_priceFeed\":\"New priceFeed\"}},\"adminSetTreasury(address)\":{\"params\":{\"_treasury\":\"New treasury address\"}},\"adminSetVestingStart(uint256)\":{\"params\":{\"_vestingStart\":\"New vesting start time\"}},\"adminWithdrawERC20(address)\":{\"params\":{\"ERC20token\":\"Address of ERC20 token to withdraw from the contract\"}},\"calcCoinPurchasedAmount(address,uint256)\":{\"details\":\"Calculates token amount based on amount of token.\",\"params\":{\"_amount\":\"Coin amount to convert to token\",\"_coin\":\"Supported ERC20 token\"},\"returns\":{\"_0\":\"purchasedAmount Token amount to buy\"}},\"calcEthPurchasedAmount(uint256)\":{\"details\":\"Calculates Token amount based on rate and ETH amount.\",\"params\":{\"_amount\":\"ETH amount to convert to token\"},\"returns\":{\"_0\":\"Token amount\"}},\"claimable(address)\":{\"params\":{\"_user\":\"Address of the user who purchased tokens\"},\"returns\":{\"_0\":\"The amount of the token vested and unclaimed.\"}},\"claimed(address)\":{\"params\":{\"_user\":\"Address of the user who purchased tokens\"},\"returns\":{\"_0\":\"The amount of the token claimed.\"}},\"locked(address)\":{\"params\":{\"_user\":\"Address of the user who purchased tokens\"},\"returns\":{\"_0\":\"The amount of the token vested and unclaimed.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"purchaseTokenWithCoin(address,uint256)\":{\"params\":{\"amount\":\"Amount of the token to be paid in\",\"coin\":\"Address of the token to be paid in\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"TokenPurchased(address,address,uint256,uint256)\":{\"notice\":\"EVENTS*\"}},\"kind\":\"user\",\"methods\":{\"USDC()\":{\"notice\":\"CONSTANTS*\"},\"adminPause()\":{\"notice\":\"Stops purchase functions. Owner only\"},\"adminSetBasePrice(uint256)\":{\"notice\":\"Sets the rate based on the contracts precision\"},\"adminSetMaxGasPrice(uint256)\":{\"notice\":\"Allows owner to change the max allowed gas price. Prevents gas wars\"},\"adminSetMaxToken(uint256)\":{\"notice\":\"Allows owner to change max allowed token per address.\"},\"adminSetMinToken(uint256)\":{\"notice\":\"Allows owner to change min allowed token to buy per tx.\"},\"adminSetPriceFeed(address)\":{\"notice\":\"Updates current priceFeed of chainlink.\"},\"adminSetTreasury(address)\":{\"notice\":\"Allows owner to change the treasury address. Treasury is the address where all funds from sale go to\"},\"adminSetVestingStart(uint256)\":{\"notice\":\"Updates current vesting start time. Can be used once\"},\"adminUnpause()\":{\"notice\":\"Unpauses purchase functions. Owner only\"},\"adminWithdrawERC20(address)\":{\"notice\":\"Function for the administrator to withdraw tokenWithdrawals allowed only if there is no sale pending stage\"},\"adminWithdrawETH()\":{\"notice\":\"Function for the administrator to withdraw ETH for refundsWithdrawals allowed only if there is no sale pending stage\"},\"claim()\":{\"notice\":\"Transfers available for claim vested tokens to the user.\"},\"claimable(address)\":{\"notice\":\"Calculates the amount that has already vested but hasn't been claimed yet.\"},\"claimed(address)\":{\"notice\":\"Gets the amount of tokens the user has already claimed\"},\"locked(address)\":{\"notice\":\"Calculates the amount that is still locked.\"},\"purchaseTokenWithCoin(address,uint256)\":{\"notice\":\"For purchase with allowed stablecoin (USDC)\"},\"purchaseTokenWithETH()\":{\"notice\":\"For purchase with ETH. ETH is left on the contract until withdrawn to treasury\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ifo/EMOPrivateSale.sol\":\"EMOPrivateSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () internal {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\"},\"contracts/ifo/EMOPrivateSale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function latestRoundData() external view returns (\\n        uint80 roundId,\\n        int256 answer,\\n        uint256 startedAt,\\n        uint256 updatedAt,\\n        uint80 answeredInRound\\n    );\\n}\\n\\ncontract EMOPrivateSale is Ownable, Pausable {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /**\\n     * EVENTS\\n     **/\\n    event TokenPurchased(address indexed user, address coin, uint coinAmount, uint256 tokenAmount);\\n    event TokensClaimed(address indexed user, uint256 tokenAmount);\\n\\n    /**\\n     * CONSTANTS\\n     **/\\n\\n    // *** support coin ***\\n    address public USDC;\\n\\n    // *** SALE PARAMETERS ***\\n    uint256 public constant PRECISION = 1000000; //Up to 0.000001\\n    uint256 public constant WITHDRAWAL_PERIOD = 395 * 24 * 60 * 60; //1 year to withdrawal\\n\\n    /***\\n     * STORAGE\\n     ***/\\n\\n    uint256 public minTokensAmount; // minimum amount of TOKEN to buy per tx,like 1000 * 1e18\\n    uint256 public maxTokensAmount; // max amount of each address can buy\\n    uint256 public maxGasPrice; // mitigate front running\\n\\n    // *** SALE PARAMETERS START ***\\n\\n    AggregatorV3Interface public priceFeed;\\n    uint256 public  privateSaleStart;\\n    uint256 public  privateSaleEnd;\\n    uint256 public  privateSaleTokenPool; // total amount of token in private slae pool\\n\\n    // *** SALE PARAMETERS END ***\\n\\n    // *** VESTING PARAMETERS START ***\\n\\n    uint256 public vestingStart; // seconds\\n    uint256 public vestingDuration; // seconds\\n\\n    // *** VESTING PARAMETERS END ***\\n\\n    address public token;\\n    uint256 public tokenPrice; // the price of token in usd multiply by PRECISION\\n    mapping(address => uint256) public purchased;\\n    mapping(address => uint256) internal _claimed;\\n    mapping(address => bool) public whitelisted;\\n\\n    uint256 public purchasedPrivateSale;\\n    uint256 public basePrice; // the price of ETH in usd multiply by PRECISION\\n\\n    address private treasury;\\n    address private keeper; // update base price\\n\\n    /***\\n     * MODIFIERS\\n     ***/\\n\\n    /**\\n    * @dev Throws if address is not owner or keeper.\\n    */\\n    modifier onlyKeeper() {\\n        require(_msgSender() == owner() || _msgSender() == keeper, \\\"!Keeper\\\");\\n        _;\\n    }\\n\\n    /**\\n    * @dev Throws if called when no ongoing pre-sale or public sale.\\n    */\\n    modifier onlySale() {\\n        require(_isPrivateSale(), \\\"PrivateSale stages are over or not started\\\");\\n        _;\\n    }\\n\\n    /**\\n    * @dev Throws if sale stage is ongoing.\\n    */\\n    modifier notOnSale() {\\n        require(!_isPrivateSale(), \\\"PrivateSale is not over\\\");\\n        _;\\n    }\\n\\n    /**\\n    * @dev Throws if gas price exceeds gas limit.\\n    */\\n    modifier correctGas() {\\n        require(maxGasPrice == 0 || tx.gasprice <= maxGasPrice, \\\"Gas price exceeds limit\\\");\\n        _;\\n    }\\n\\n    /**\\n    * @dev Throws if address is not on the whitelist.\\n    */\\n    modifier onlyWhitelist(address user) {\\n        require(whitelisted[user], \\\"Address is not on the whitelist\\\");\\n        _;\\n    }\\n\\n    /***\\n     * INITIALIZER AND SETTINGS\\n     ***/\\n\\n    constructor(address _treasury, address _keeper, address _usdc,\\n        address _token, uint256 _tokenPrice, uint256 _basePrice,\\n        uint256 _minTokensAmount, uint256 _maxTokensAmount, uint256 _privateSaleTokenPool,\\n        uint256 _privateSaleStart, uint256 _privateSaleEnd, uint256 _vestingDuration) public {\\n        require(_treasury != address(0), \\\"!treasury\\\");\\n        require(_privateSaleStart > 0, \\\"!start\\\");\\n        require(_privateSaleEnd > _privateSaleStart, \\\"start >= end\\\");\\n        require(_vestingDuration < WITHDRAWAL_PERIOD, \\\"vestingDuration >= WITHDRAWAL_PERIOD\\\");\\n\\n        treasury = _treasury;\\n        keeper = _keeper;\\n\\n        USDC = _usdc;\\n        token = _token;\\n        tokenPrice = _tokenPrice;\\n        basePrice = _basePrice;\\n\\n        minTokensAmount = _minTokensAmount;\\n        maxTokensAmount = _maxTokensAmount;\\n        privateSaleTokenPool = _privateSaleTokenPool;\\n\\n        privateSaleStart = _privateSaleStart;\\n        privateSaleEnd = _privateSaleEnd;\\n        vestingDuration = _vestingDuration;\\n    }\\n\\n    /**\\n    * @notice Updates current priceFeed of chainlink.\\n    * @param _priceFeed New priceFeed\\n    */\\n    function adminSetPriceFeed(address _priceFeed) external onlyOwner {\\n        priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    /**\\n     * @notice Updates current vesting start time. Can be used once\\n     * @param _vestingStart New vesting start time\\n     */\\n    function adminSetVestingStart(uint256 _vestingStart) virtual external onlyOwner {\\n        require(vestingStart == 0, \\\"Vesting start is already set\\\");\\n        require(_vestingStart > privateSaleEnd && block.timestamp < _vestingStart, \\\"Incorrect time provided\\\");\\n        vestingStart = _vestingStart;\\n    }\\n\\n    /**\\n    * @notice Sets the rate based on the contracts precision\\n    * @param _price The price of ETH multiple by precision (e.g. _rate = PRECISION corresponds to $1)\\n    */\\n    function adminSetBasePrice(uint256 _price) external onlyKeeper {\\n        basePrice = _price;\\n    }\\n\\n    /**\\n    * @notice Allows owner to change the treasury address. Treasury is the address where all funds from sale go to\\n    * @param _treasury New treasury address\\n    */\\n    function adminSetTreasury(address _treasury) external onlyOwner {\\n        treasury = _treasury;\\n    }\\n\\n    /**\\n    * @notice Allows owner to change min allowed token to buy per tx.\\n    * @param _minToken New min token amount\\n    */\\n    function adminSetMinToken(uint256 _minToken) external onlyOwner {\\n        minTokensAmount = _minToken;\\n    }\\n\\n    /**\\n    * @notice Allows owner to change max allowed token per address.\\n    * @param _maxToken New max token amount\\n    */\\n    function adminSetMaxToken(uint256 _maxToken) external onlyOwner {\\n        maxTokensAmount = _maxToken;\\n    }\\n\\n    /**\\n    * @notice Allows owner to change the max allowed gas price. Prevents gas wars\\n    * @param _maxGasPrice New max gas price\\n    */\\n    function adminSetMaxGasPrice(uint256 _maxGasPrice) external onlyOwner {\\n        maxGasPrice = _maxGasPrice;\\n    }\\n\\n    function adminSetWhitelisted(address [] memory _users, bool _flag) external onlyOwner {\\n        for (uint i = 0; i < _users.length; i++) {\\n            whitelisted[_users[i]] = _flag;\\n        }\\n    }\\n\\n    /**\\n    * @notice Stops purchase functions. Owner only\\n    */\\n    function adminPause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n    * @notice Unpauses purchase functions. Owner only\\n    */\\n    function adminUnpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    function adminAddPurchase(address _receiver, uint256 _amount) virtual external onlyOwner {\\n        purchased[_receiver] = purchased[_receiver].add(_amount);\\n    }\\n\\n    /***\\n     * PURCHASE FUNCTIONS\\n     ***/\\n\\n    /**\\n    * @notice For purchase with ETH\\n    */\\n    receive() external virtual payable onlySale whenNotPaused {\\n        _purchaseTokenWithETH();\\n    }\\n\\n    /**\\n     * @notice For purchase with ETH. ETH is left on the contract until withdrawn to treasury\\n     */\\n    function purchaseTokenWithETH() external payable onlySale whenNotPaused {\\n        require(msg.value > 0, \\\"No ETH sent\\\");\\n        _purchaseTokenWithETH();\\n    }\\n\\n    function _purchaseTokenWithETH() private correctGas onlyWhitelist(_msgSender()) {\\n        uint256 purchasedAmount = calcEthPurchasedAmount(msg.value);\\n        require(purchasedAmount >= minTokensAmount, \\\"Minimum required unreached\\\");\\n\\n        require(purchasedPrivateSale.add(purchasedAmount) <= privateSaleTokenPool, \\\"Not enough token in private slae pool\\\");\\n        purchasedPrivateSale = purchasedPrivateSale.add(purchasedAmount);\\n        purchased[_msgSender()] = purchased[_msgSender()].add(purchasedAmount);\\n        require(purchased[_msgSender()] <= maxTokensAmount, \\\"Maximum allowed exceeded\\\");\\n\\n        emit TokenPurchased(_msgSender(), address(0), msg.value, purchasedAmount);\\n    }\\n\\n    /**\\n    * @notice For purchase with allowed stablecoin (USDC)\\n    * @param coin Address of the token to be paid in\\n    * @param amount Amount of the token to be paid in\\n    */\\n    function purchaseTokenWithCoin(address coin, uint256 amount) external onlySale whenNotPaused correctGas onlyWhitelist(_msgSender()) {\\n        require(coin == USDC, \\\"Coin is not supported!\\\");\\n        uint256 purchasedAmount = calcCoinPurchasedAmount(coin, amount);\\n        require(purchasedAmount >= minTokensAmount, \\\"Minimum required unreached\\\");\\n\\n        purchasedPrivateSale = purchasedPrivateSale.add(purchasedAmount);\\n        require(purchasedPrivateSale <= privateSaleTokenPool, \\\"Token is not enough!\\\");\\n        purchased[_msgSender()] = purchased[_msgSender()].add(purchasedAmount);\\n        require(purchased[_msgSender()] <= maxTokensAmount, \\\"Maximum allowed exceeded\\\");\\n\\n        IERC20(coin).safeTransferFrom(_msgSender(), address(this), amount);\\n\\n        emit TokenPurchased(_msgSender(), coin, amount, purchasedAmount);\\n    }\\n\\n\\n    /**\\n     * @notice Function for the administrator to withdraw token\\n     * @notice Withdrawals allowed only if there is no sale pending stage\\n     * @param ERC20token Address of ERC20 token to withdraw from the contract\\n     */\\n    function adminWithdrawERC20(address ERC20token) external onlyOwner notOnSale {\\n        uint256 withdrawAmount;\\n        if (ERC20token != token) {\\n            withdrawAmount = IERC20(ERC20token).balanceOf(address(this));\\n        } else {\\n            if (block.timestamp >= vestingStart.add(WITHDRAWAL_PERIOD)) {\\n                withdrawAmount = IERC20(ERC20token).balanceOf(address(this));\\n            } else {\\n                withdrawAmount = IERC20(ERC20token).balanceOf(address(this)).sub(purchasedPrivateSale);\\n            }\\n        }\\n\\n        require(withdrawAmount > 0, \\\"No ERC20 to withdraw\\\");\\n        IERC20(ERC20token).safeTransfer(treasury, withdrawAmount);\\n    }\\n\\n    /**\\n     * @notice Function for the administrator to withdraw ETH for refunds\\n     * @notice Withdrawals allowed only if there is no sale pending stage\\n     */\\n    function adminWithdrawETH() external onlyOwner notOnSale {\\n        require(address(this).balance > 0, \\\"No ETH to withdraw\\\");\\n\\n        (bool success,) = treasury.call{value : address(this).balance}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n\\n    /***\\n     * VESTING INTERFACE\\n     ***/\\n\\n    /**\\n     * @notice Transfers available for claim vested tokens to the user.\\n     */\\n    function claim() external notOnSale {\\n        require(vestingStart != 0, \\\"Vesting start is not set\\\");\\n        uint256 unclaimed = claimable(_msgSender());\\n        require(unclaimed > 0, \\\"TokenVesting: no tokens are due\\\");\\n\\n        _claimed[_msgSender()] = _claimed[_msgSender()].add(unclaimed);\\n        IERC20(token).safeTransfer(_msgSender(), unclaimed);\\n        emit TokensClaimed(_msgSender(), unclaimed);\\n    }\\n\\n    /**\\n     * @notice Gets the amount of tokens the user has already claimed\\n     * @param _user Address of the user who purchased tokens\\n     * @return The amount of the token claimed.\\n     */\\n    function claimed(address _user) external view returns (uint256) {\\n        return _claimed[_user];\\n    }\\n\\n    /**\\n     * @notice Calculates the amount that has already vested but hasn't been claimed yet.\\n     * @param _user Address of the user who purchased tokens\\n     * @return The amount of the token vested and unclaimed.\\n     */\\n    function claimable(address _user) public view returns (uint256) {\\n        return _vestedAmount(_user).sub(_claimed[_user]);\\n    }\\n\\n    /**\\n    * @notice Calculates the amount that is still locked.\\n    * @param _user Address of the user who purchased tokens\\n    * @return The amount of the token vested and unclaimed.\\n    */\\n    function locked(address _user) public view returns (uint256) {\\n        return purchased[_user].sub(_vestedAmount(_user));\\n    }\\n\\n    /**\\n     * @dev Calculates the amount that has already vested.\\n     * @param _user Address of the user who purchased tokens\\n     * @return Amount of token already vested\\n     */\\n    function _vestedAmount(address _user) private view returns (uint256) {\\n        if (vestingStart == 0 || block.timestamp < vestingStart) {\\n            return 0;\\n        } else if (block.timestamp >= vestingStart.add(vestingDuration)) {\\n            return purchased[_user];\\n        } else {\\n            return purchased[_user].mul(block.timestamp.sub(vestingStart)).div(vestingDuration);\\n        }\\n    }\\n\\n\\n    /**\\n     * @dev Calculates Token amount based on rate and ETH amount.\\n     * @param _amount ETH amount to convert to token\\n     * @return Token amount\\n     */\\n    function calcEthPurchasedAmount(uint256 _amount) public view returns (uint256) {\\n        if (address(priceFeed) != address(0)) {\\n            uint decimals = priceFeed.decimals();\\n            (,int256 price,,,) = priceFeed.latestRoundData();\\n            return _amount.mul(uint256(price)).mul(PRECISION).div(tokenPrice).div(10 ** decimals);\\n        } else {\\n            return _amount.mul(basePrice).div(tokenPrice);\\n        }\\n    }\\n\\n    /**\\n     * @dev Calculates token amount based on amount of token.\\n     * @param _coin Supported ERC20 token\\n     * @param _amount Coin amount to convert to token\\n     * @return purchasedAmount Token amount to buy\\n     */\\n    function calcCoinPurchasedAmount(address _coin, uint256 _amount) public view returns (uint256) {\\n        uint256 amountInUsd = _amount.mul(1e18).div(10 ** (uint256(ERC20(_coin).decimals())));\\n        return amountInUsd.mul(PRECISION).div(tokenPrice);\\n    }\\n\\n    /***\\n     * INTERNAL HELPERS\\n     ***/\\n\\n\\n    /**\\n     * @dev Checks if private slae stage is on-going.\\n     * @return True is private slae is active\\n     */\\n    function _isPrivateSale() virtual internal view returns (bool) {\\n        return (block.timestamp >= privateSaleStart && block.timestamp < privateSaleEnd);\\n    }\\n}\",\"keccak256\":\"0xd9c36185e4c3a3c695dbb22f882e8a4d5a91d58550e3436f34fa42eba7cfbf3b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002a0d38038062002a0d8339810160408190526200003491620001d4565b600062000040620001b2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b191690556001600160a01b038c16620000c95760405162461bcd60e51b8152600401620000c090620002ca565b60405180910390fd5b60008311620000ec5760405162461bcd60e51b8152600401620000c090620002aa565b8282116200010e5760405162461bcd60e51b8152600401620000c09062000284565b630208c0808110620001345760405162461bcd60e51b8152600401620000c090620002ed565b601280546001600160a01b039d8e166001600160a01b031991821617909155601380549c8e169c82169c909c17909b55600180549a8d169a8c169a909a17909955600b805498909b169790991696909617909855600c93909355601191909155600255600355600893909355600692909255600755600a5562000331565b3390565b80516001600160a01b0381168114620001ce57600080fd5b92915050565b6000806000806000806000806000806000806101808d8f031215620001f7578788fd5b620002038e8e620001b6565b9b50620002148e60208f01620001b6565b9a50620002258e60408f01620001b6565b9950620002368e60608f01620001b6565b985060808d0151975060a08d0151965060c08d0151955060e08d015194506101008d015193506101208d015192506101408d015191506101608d015190509295989b509295989b509295989b565b6020808252600c908201526b1cdd185c9d080f8f48195b9960a21b604082015260600190565b602080825260069082015265085cdd185c9d60d21b604082015260600190565b60208082526009908201526821747265617375727960b81b604082015260600190565b60208082526024908201527f76657374696e674475726174696f6e203e3d205749544844524157414c5f5045604082015263149253d160e21b606082015260800190565b6126cc80620003416000396000f3fe6080604052600436106102605760003560e01c8063741bef1a11610144578063c20860af116100b6578063d4b194851161007a578063d4b1948514610697578063d936547e146106b7578063dea54651146106d7578063ed84fc91146106f7578063f2fde38b1461070c578063fc0c546a1461072c576102c1565b8063c20860af1461060d578063c7876ea414610622578063c884ef8314610637578063cbf9fe5f14610657578063d26a696214610677576102c1565b80638a3ef9a7116101085780638a3ef9a7146105915780638da5cb5b1461059957806392f9c067146105ae5780639731a486146105c3578063aaf5eb68146105d8578063b0b401c2146105ed576102c1565b8063741bef1a1461050557806377bb5c45146105275780637e0d4b68146105475780637ff9b5961461056757806389a302711461057c576102c1565b806330689fdb116101dd5780634e71d92d116101a15780634e71d92d1461046f578063522fe98e146104845780635c975abb146104a457806360423455146104c6578063712b49ac146104db578063715018a6146104f0576102c1565b806330689fdb146103e557806332330eac146103fa5780633de39c111461041a578063402914f51461042f578063447e0b541461044f576102c1565b80631955462a116102245780631955462a1461035b57806319a33ea21461037b5780631d1d9b471461039b5780631dd8097b146103bb578063254800d4146103d0576102c1565b80630914bc27146102c65780630a384665146102fc5780630bf390b8146103115780631514617e1461032657806316932b061461033b576102c1565b366102c15761026d610741565b6102925760405162461bcd60e51b815260040161028990612133565b60405180910390fd5b61029a61075b565b156102b75760405162461bcd60e51b81526004016102899061231b565b6102bf61076b565b005b600080fd5b3480156102d257600080fd5b506102e66102e1366004611e96565b610944565b6040516102f3919061262c565b60405180910390f35b34801561030857600080fd5b506102e6610ac7565b34801561031d57600080fd5b506102e6610acd565b34801561033257600080fd5b506102e6610ad5565b34801561034757600080fd5b506102bf610356366004611e96565b610adb565b34801561036757600080fd5b506102e6610376366004611d91565b610b6b565b34801561038757600080fd5b506102bf610396366004611d76565b610c1b565b3480156103a757600080fd5b506102bf6103b6366004611d76565b610e26565b3480156103c757600080fd5b506102e6610e87565b3480156103dc57600080fd5b506102e6610e8d565b3480156103f157600080fd5b506102e6610e93565b34801561040657600080fd5b506102bf610415366004611d91565b610e99565b34801561042657600080fd5b506102e66110dc565b34801561043b57600080fd5b506102e661044a366004611d76565b6110e2565b34801561045b57600080fd5b506102bf61046a366004611e96565b611108565b34801561047b57600080fd5b506102bf611171565b34801561049057600080fd5b506102e661049f366004611d76565b611283565b3480156104b057600080fd5b506104b961075b565b6040516102f39190611fc9565b3480156104d257600080fd5b506102e6611295565b3480156104e757600080fd5b506102e661129b565b3480156104fc57600080fd5b506102bf6112a1565b34801561051157600080fd5b5061051a61132a565b6040516102f39190611f57565b34801561053357600080fd5b506102bf610542366004611d76565b611339565b34801561055357600080fd5b506102bf610562366004611e96565b61139a565b34801561057357600080fd5b506102e66113de565b34801561058857600080fd5b5061051a6113e4565b6102bf6113f3565b3480156105a557600080fd5b5061051a611466565b3480156105ba57600080fd5b506102bf611475565b3480156105cf57600080fd5b506102e66114bc565b3480156105e457600080fd5b506102e66114c2565b3480156105f957600080fd5b506102bf610608366004611e96565b6114c9565b34801561061957600080fd5b506102bf61150d565b34801561062e57600080fd5b506102e6611554565b34801561064357600080fd5b506102e6610652366004611d76565b61155a565b34801561066357600080fd5b506102e6610672366004611d76565b611575565b34801561068357600080fd5b506102bf610692366004611dbb565b6115a2565b3480156106a357600080fd5b506102bf6106b2366004611e96565b61163d565b3480156106c357600080fd5b506104b96106d2366004611d76565b611681565b3480156106e357600080fd5b506102bf6106f2366004611d91565b611696565b34801561070357600080fd5b506102bf611718565b34801561071857600080fd5b506102bf610727366004611d76565b611820565b34801561073857600080fd5b5061051a6118e0565b60006006544210158015610756575060075442105b905090565b600054600160a01b900460ff1690565b600454158061077c57506004543a11155b6107985760405162461bcd60e51b81526004016102899061229f565b6107a06118ef565b6001600160a01b0381166000908152600f602052604090205460ff166107d85760405162461bcd60e51b815260040161028990612007565b60006107e334610944565b90506002548110156108075760405162461bcd60e51b8152600401610289906123e0565b60085460105461081790836118f3565b11156108355760405162461bcd60e51b8152600401610289906122d6565b60105461084290826118f3565b60105561087581600d60006108556118ef565b6001600160a01b03168152602081019190915260400160002054906118f3565b600d60006108816118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600354600d60006108b46118ef565b6001600160a01b03166001600160a01b031681526020019081526020016000205411156108f35760405162461bcd60e51b8152600401610289906125f5565b6108fb6118ef565b6001600160a01b03167f8daf503382665d950e449b86172be5222275c90f4ddf69c29fdaa8237a562a6d6000348460405161093893929190611f6b565b60405180910390a25050565b6005546000906001600160a01b031615610aa4576005546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561099d57600080fd5b505afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611f17565b60ff1690506000600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2a57600080fd5b505afa158015610a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a629190611ec6565b505050915050610a9b82600a0a610a95600c54610a95620f4240610a8f878b61191f90919063ffffffff16565b9061191f565b90611959565b92505050610ac2565b610abf600c54610a956011548561191f90919063ffffffff16565b90505b919050565b60035481565b630208c08081565b600a5481565b610ae36118ef565b6001600160a01b0316610af4611466565b6001600160a01b031614610b1a5760405162461bcd60e51b8152600401610289906123ab565b60095415610b3a5760405162461bcd60e51b8152600401610289906125be565b60075481118015610b4a57508042105b610b665760405162461bcd60e51b815260040161028990612473565b600955565b600080610bfa846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610baa57600080fd5b505afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611f17565b60ff16600a0a610a9585670de0b6b3a764000061191f565b600c54909150610c1190610a9583620f424061191f565b9150505b92915050565b610c236118ef565b6001600160a01b0316610c34611466565b6001600160a01b031614610c5a5760405162461bcd60e51b8152600401610289906123ab565b610c62610741565b15610c7f5760405162461bcd60e51b8152600401610289906124aa565b600b546000906001600160a01b03838116911614610d1a576040516370a0823160e01b81526001600160a01b038316906370a0823190610cc3903090600401611f57565b60206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d139190611eae565b9050610de8565b600954610d2b90630208c0806118f3565b4210610d5d576040516370a0823160e01b81526001600160a01b038316906370a0823190610cc3903090600401611f57565b610de5601054836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610d8f9190611f57565b60206040518083038186803b158015610da757600080fd5b505afa158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190611eae565b9061198b565b90505b60008111610e085760405162461bcd60e51b8152600401610289906124e1565b601254610e22906001600160a01b038481169116836119b3565b5050565b610e2e6118ef565b6001600160a01b0316610e3f611466565b6001600160a01b031614610e655760405162461bcd60e51b8152600401610289906123ab565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b60105481565b60095481565b60075481565b610ea1610741565b610ebd5760405162461bcd60e51b815260040161028990612133565b610ec561075b565b15610ee25760405162461bcd60e51b81526004016102899061231b565b6004541580610ef357506004543a11155b610f0f5760405162461bcd60e51b81526004016102899061229f565b610f176118ef565b6001600160a01b0381166000908152600f602052604090205460ff16610f4f5760405162461bcd60e51b815260040161028990612007565b6001546001600160a01b03848116911614610f7c5760405162461bcd60e51b815260040161028990612443565b6000610f888484610b6b565b9050600254811015610fac5760405162461bcd60e51b8152600401610289906123e0565b601054610fb990826118f3565b60108190556008541015610fdf5760405162461bcd60e51b815260040161028990612546565b610fef81600d60006108556118ef565b600d6000610ffb6118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600354600d600061102e6118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002054111561106d5760405162461bcd60e51b8152600401610289906125f5565b61108a6110786118ef565b6001600160a01b038616903086611a09565b6110926118ef565b6001600160a01b03167f8daf503382665d950e449b86172be5222275c90f4ddf69c29fdaa8237a562a6d8585846040516110ce93929190611f6b565b60405180910390a250505050565b60045481565b6001600160a01b0381166000908152600e6020526040812054610abf90610ddf84611a30565b611110611466565b6001600160a01b03166111216118ef565b6001600160a01b0316148061115057506013546001600160a01b03166111456118ef565b6001600160a01b0316145b61116c5760405162461bcd60e51b81526004016102899061206c565b601155565b611179610741565b156111965760405162461bcd60e51b8152600401610289906124aa565b6009546111b55760405162461bcd60e51b815260040161028990612231565b60006111c261044a6118ef565b9050600081116111e45760405162461bcd60e51b81526004016102899061217d565b6111f481600e60006108556118ef565b600e60006112006118ef565b6001600160a01b031681526020810191909152604001600020556112386112256118ef565b600b546001600160a01b031690836119b3565b6112406118ef565b6001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051611278919061262c565b60405180910390a250565b600d6020526000908152604090205481565b60025481565b60085481565b6112a96118ef565b6001600160a01b03166112ba611466565b6001600160a01b0316146112e05760405162461bcd60e51b8152600401610289906123ab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b6113416118ef565b6001600160a01b0316611352611466565b6001600160a01b0316146113785760405162461bcd60e51b8152600401610289906123ab565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6113a26118ef565b6001600160a01b03166113b3611466565b6001600160a01b0316146113d95760405162461bcd60e51b8152600401610289906123ab565b600355565b600c5481565b6001546001600160a01b031681565b6113fb610741565b6114175760405162461bcd60e51b815260040161028990612133565b61141f61075b565b1561143c5760405162461bcd60e51b81526004016102899061231b565b6000341161145c5760405162461bcd60e51b815260040161028990612386565b61146461076b565b565b6000546001600160a01b031690565b61147d6118ef565b6001600160a01b031661148e611466565b6001600160a01b0316146114b45760405162461bcd60e51b8152600401610289906123ab565b611464611ac2565b60065481565b620f424081565b6114d16118ef565b6001600160a01b03166114e2611466565b6001600160a01b0316146115085760405162461bcd60e51b8152600401610289906123ab565b600255565b6115156118ef565b6001600160a01b0316611526611466565b6001600160a01b03161461154c5760405162461bcd60e51b8152600401610289906123ab565b611464611b33565b60115481565b6001600160a01b03166000908152600e602052604090205490565b6000610abf61158383611a30565b6001600160a01b0384166000908152600d60205260409020549061198b565b6115aa6118ef565b6001600160a01b03166115bb611466565b6001600160a01b0316146115e15760405162461bcd60e51b8152600401610289906123ab565b60005b82518110156116385781600f60008584815181106115fe57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016115e4565b505050565b6116456118ef565b6001600160a01b0316611656611466565b6001600160a01b03161461167c5760405162461bcd60e51b8152600401610289906123ab565b600455565b600f6020526000908152604090205460ff1681565b61169e6118ef565b6001600160a01b03166116af611466565b6001600160a01b0316146116d55760405162461bcd60e51b8152600401610289906123ab565b6001600160a01b0382166000908152600d60205260409020546116f890826118f3565b6001600160a01b039092166000908152600d602052604090209190915550565b6117206118ef565b6001600160a01b0316611731611466565b6001600160a01b0316146117575760405162461bcd60e51b8152600401610289906123ab565b61175f610741565b1561177c5760405162461bcd60e51b8152600401610289906124aa565b6000471161179c5760405162461bcd60e51b815260040161028990612417565b6012546040516000916001600160a01b03169047906117ba90611f54565b60006040518083038185875af1925050503d80600081146117f7576040519150601f19603f3d011682016040523d82523d6000602084013e6117fc565b606091505b505090508061181d5760405162461bcd60e51b8152600401610289906120d3565b50565b6118286118ef565b6001600160a01b0316611839611466565b6001600160a01b03161461185f5760405162461bcd60e51b8152600401610289906123ab565b6001600160a01b0381166118855760405162461bcd60e51b81526004016102899061208d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031681565b3390565b6000828201838110156119185760405162461bcd60e51b8152600401610289906120fc565b9392505050565b60008261192e57506000610c15565b8282028284828161193b57fe5b04146119185760405162461bcd60e51b815260040161028990612345565b600080821161197a5760405162461bcd60e51b815260040161028990612268565b81838161198357fe5b049392505050565b6000828211156119ad5760405162461bcd60e51b8152600401610289906121b4565b50900390565b6116388363a9059cbb60e01b84846040516024016119d2929190611fb0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b94565b611a2a846323b872dd60e01b8585856040516024016119d293929190611f8c565b50505050565b600060095460001480611a44575060095442105b15611a5157506000610ac2565b600a54600954611a60916118f3565b4210611a8557506001600160a01b0381166000908152600d6020526040902054610ac2565b610abf600a54610a95611aa36009544261198b90919063ffffffff16565b6001600160a01b0386166000908152600d60205260409020549061191f565b611aca61075b565b611ae65760405162461bcd60e51b81526004016102899061203e565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b1c6118ef565b604051611b299190611f57565b60405180910390a1565b611b3b61075b565b15611b585760405162461bcd60e51b81526004016102899061231b565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b1c6118ef565b6060611be9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c239092919063ffffffff16565b8051909150156116385780806020019051810190611c079190611e7a565b6116385760405162461bcd60e51b815260040161028990612574565b6060611c328484600085611c3a565b949350505050565b606082471015611c5c5760405162461bcd60e51b8152600401610289906121eb565b611c6585611cfb565b611c815760405162461bcd60e51b81526004016102899061250f565b60006060866001600160a01b03168587604051611c9e9190611f38565b60006040518083038185875af1925050503d8060008114611cdb576040519150601f19603f3d011682016040523d82523d6000602084013e611ce0565b606091505b5091509150611cf0828286611d01565b979650505050505050565b3b151590565b60608315611d10575081611918565b825115611d205782518084602001fd5b8160405162461bcd60e51b81526004016102899190611fd4565b80356001600160a01b0381168114610c1557600080fd5b8035610c1581612688565b805169ffffffffffffffffffff81168114610c1557600080fd5b600060208284031215611d87578081fd5b6119188383611d3a565b60008060408385031215611da3578081fd5b611dad8484611d3a565b946020939093013593505050565b60008060408385031215611dcd578182fd5b823567ffffffffffffffff80821115611de4578384fd5b818501915085601f830112611df7578384fd5b813581811115611e05578485fd5b60209150818102611e17838201612635565b8281528381019085850183870186018b1015611e31578889fd5b8896505b84871015611e5b57611e478b82611d3a565b835260019690960195918501918501611e35565b5080975050505050611e6f86828701611d51565b925050509250929050565b600060208284031215611e8b578081fd5b815161191881612688565b600060208284031215611ea7578081fd5b5035919050565b600060208284031215611ebf578081fd5b5051919050565b600080600080600060a08688031215611edd578081fd5b611ee78787611d5c565b9450602086015193506040860151925060608601519150611f0b8760808801611d5c565b90509295509295909350565b600060208284031215611f28578081fd5b815160ff81168114611918578182fd5b60008251611f4a81846020870161265c565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611ff381604085016020870161265c565b601f01601f19169190910160400192915050565b6020808252601f908201527f41646472657373206973206e6f74206f6e207468652077686974656c69737400604082015260600190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526007908201526610a5b2b2b832b960c91b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252602a908201527f5072697661746553616c652073746167657320617265206f766572206f72206e6040820152691bdd081cdd185c9d195960b21b606082015260800190565b6020808252601f908201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526018908201527f56657374696e67207374617274206973206e6f74207365740000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526017908201527f4761732070726963652065786365656473206c696d6974000000000000000000604082015260600190565b60208082526025908201527f4e6f7420656e6f75676820746f6b656e20696e207072697661746520736c6165604082015264081c1bdbdb60da1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252600b908201526a139bc8115512081cd95b9d60aa1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f4d696e696d756d20726571756972656420756e72656163686564000000000000604082015260600190565b6020808252601290820152714e6f2045544820746f20776974686472617760701b604082015260600190565b602080825260169082015275436f696e206973206e6f7420737570706f727465642160501b604082015260600190565b60208082526017908201527f496e636f72726563742074696d652070726f7669646564000000000000000000604082015260600190565b60208082526017908201527f5072697661746553616c65206973206e6f74206f766572000000000000000000604082015260600190565b6020808252601490820152734e6f20455243323020746f20776974686472617760601b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260149082015273546f6b656e206973206e6f7420656e6f7567682160601b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601c908201527f56657374696e6720737461727420697320616c72656164792073657400000000604082015260600190565b60208082526018908201527f4d6178696d756d20616c6c6f7765642065786365656465640000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561265457600080fd5b604052919050565b60005b8381101561267757818101518382015260200161265f565b83811115611a2a5750506000910152565b801515811461181d57600080fdfea2646970667358221220c40634a523ca66ec0c9e343c673fb0d9d449076826711a5dd1672d49dd0c2e6e64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106102605760003560e01c8063741bef1a11610144578063c20860af116100b6578063d4b194851161007a578063d4b1948514610697578063d936547e146106b7578063dea54651146106d7578063ed84fc91146106f7578063f2fde38b1461070c578063fc0c546a1461072c576102c1565b8063c20860af1461060d578063c7876ea414610622578063c884ef8314610637578063cbf9fe5f14610657578063d26a696214610677576102c1565b80638a3ef9a7116101085780638a3ef9a7146105915780638da5cb5b1461059957806392f9c067146105ae5780639731a486146105c3578063aaf5eb68146105d8578063b0b401c2146105ed576102c1565b8063741bef1a1461050557806377bb5c45146105275780637e0d4b68146105475780637ff9b5961461056757806389a302711461057c576102c1565b806330689fdb116101dd5780634e71d92d116101a15780634e71d92d1461046f578063522fe98e146104845780635c975abb146104a457806360423455146104c6578063712b49ac146104db578063715018a6146104f0576102c1565b806330689fdb146103e557806332330eac146103fa5780633de39c111461041a578063402914f51461042f578063447e0b541461044f576102c1565b80631955462a116102245780631955462a1461035b57806319a33ea21461037b5780631d1d9b471461039b5780631dd8097b146103bb578063254800d4146103d0576102c1565b80630914bc27146102c65780630a384665146102fc5780630bf390b8146103115780631514617e1461032657806316932b061461033b576102c1565b366102c15761026d610741565b6102925760405162461bcd60e51b815260040161028990612133565b60405180910390fd5b61029a61075b565b156102b75760405162461bcd60e51b81526004016102899061231b565b6102bf61076b565b005b600080fd5b3480156102d257600080fd5b506102e66102e1366004611e96565b610944565b6040516102f3919061262c565b60405180910390f35b34801561030857600080fd5b506102e6610ac7565b34801561031d57600080fd5b506102e6610acd565b34801561033257600080fd5b506102e6610ad5565b34801561034757600080fd5b506102bf610356366004611e96565b610adb565b34801561036757600080fd5b506102e6610376366004611d91565b610b6b565b34801561038757600080fd5b506102bf610396366004611d76565b610c1b565b3480156103a757600080fd5b506102bf6103b6366004611d76565b610e26565b3480156103c757600080fd5b506102e6610e87565b3480156103dc57600080fd5b506102e6610e8d565b3480156103f157600080fd5b506102e6610e93565b34801561040657600080fd5b506102bf610415366004611d91565b610e99565b34801561042657600080fd5b506102e66110dc565b34801561043b57600080fd5b506102e661044a366004611d76565b6110e2565b34801561045b57600080fd5b506102bf61046a366004611e96565b611108565b34801561047b57600080fd5b506102bf611171565b34801561049057600080fd5b506102e661049f366004611d76565b611283565b3480156104b057600080fd5b506104b961075b565b6040516102f39190611fc9565b3480156104d257600080fd5b506102e6611295565b3480156104e757600080fd5b506102e661129b565b3480156104fc57600080fd5b506102bf6112a1565b34801561051157600080fd5b5061051a61132a565b6040516102f39190611f57565b34801561053357600080fd5b506102bf610542366004611d76565b611339565b34801561055357600080fd5b506102bf610562366004611e96565b61139a565b34801561057357600080fd5b506102e66113de565b34801561058857600080fd5b5061051a6113e4565b6102bf6113f3565b3480156105a557600080fd5b5061051a611466565b3480156105ba57600080fd5b506102bf611475565b3480156105cf57600080fd5b506102e66114bc565b3480156105e457600080fd5b506102e66114c2565b3480156105f957600080fd5b506102bf610608366004611e96565b6114c9565b34801561061957600080fd5b506102bf61150d565b34801561062e57600080fd5b506102e6611554565b34801561064357600080fd5b506102e6610652366004611d76565b61155a565b34801561066357600080fd5b506102e6610672366004611d76565b611575565b34801561068357600080fd5b506102bf610692366004611dbb565b6115a2565b3480156106a357600080fd5b506102bf6106b2366004611e96565b61163d565b3480156106c357600080fd5b506104b96106d2366004611d76565b611681565b3480156106e357600080fd5b506102bf6106f2366004611d91565b611696565b34801561070357600080fd5b506102bf611718565b34801561071857600080fd5b506102bf610727366004611d76565b611820565b34801561073857600080fd5b5061051a6118e0565b60006006544210158015610756575060075442105b905090565b600054600160a01b900460ff1690565b600454158061077c57506004543a11155b6107985760405162461bcd60e51b81526004016102899061229f565b6107a06118ef565b6001600160a01b0381166000908152600f602052604090205460ff166107d85760405162461bcd60e51b815260040161028990612007565b60006107e334610944565b90506002548110156108075760405162461bcd60e51b8152600401610289906123e0565b60085460105461081790836118f3565b11156108355760405162461bcd60e51b8152600401610289906122d6565b60105461084290826118f3565b60105561087581600d60006108556118ef565b6001600160a01b03168152602081019190915260400160002054906118f3565b600d60006108816118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600354600d60006108b46118ef565b6001600160a01b03166001600160a01b031681526020019081526020016000205411156108f35760405162461bcd60e51b8152600401610289906125f5565b6108fb6118ef565b6001600160a01b03167f8daf503382665d950e449b86172be5222275c90f4ddf69c29fdaa8237a562a6d6000348460405161093893929190611f6b565b60405180910390a25050565b6005546000906001600160a01b031615610aa4576005546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561099d57600080fd5b505afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611f17565b60ff1690506000600560009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a2a57600080fd5b505afa158015610a3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a629190611ec6565b505050915050610a9b82600a0a610a95600c54610a95620f4240610a8f878b61191f90919063ffffffff16565b9061191f565b90611959565b92505050610ac2565b610abf600c54610a956011548561191f90919063ffffffff16565b90505b919050565b60035481565b630208c08081565b600a5481565b610ae36118ef565b6001600160a01b0316610af4611466565b6001600160a01b031614610b1a5760405162461bcd60e51b8152600401610289906123ab565b60095415610b3a5760405162461bcd60e51b8152600401610289906125be565b60075481118015610b4a57508042105b610b665760405162461bcd60e51b815260040161028990612473565b600955565b600080610bfa846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610baa57600080fd5b505afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611f17565b60ff16600a0a610a9585670de0b6b3a764000061191f565b600c54909150610c1190610a9583620f424061191f565b9150505b92915050565b610c236118ef565b6001600160a01b0316610c34611466565b6001600160a01b031614610c5a5760405162461bcd60e51b8152600401610289906123ab565b610c62610741565b15610c7f5760405162461bcd60e51b8152600401610289906124aa565b600b546000906001600160a01b03838116911614610d1a576040516370a0823160e01b81526001600160a01b038316906370a0823190610cc3903090600401611f57565b60206040518083038186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d139190611eae565b9050610de8565b600954610d2b90630208c0806118f3565b4210610d5d576040516370a0823160e01b81526001600160a01b038316906370a0823190610cc3903090600401611f57565b610de5601054836001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610d8f9190611f57565b60206040518083038186803b158015610da757600080fd5b505afa158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190611eae565b9061198b565b90505b60008111610e085760405162461bcd60e51b8152600401610289906124e1565b601254610e22906001600160a01b038481169116836119b3565b5050565b610e2e6118ef565b6001600160a01b0316610e3f611466565b6001600160a01b031614610e655760405162461bcd60e51b8152600401610289906123ab565b601280546001600160a01b0319166001600160a01b0392909216919091179055565b60105481565b60095481565b60075481565b610ea1610741565b610ebd5760405162461bcd60e51b815260040161028990612133565b610ec561075b565b15610ee25760405162461bcd60e51b81526004016102899061231b565b6004541580610ef357506004543a11155b610f0f5760405162461bcd60e51b81526004016102899061229f565b610f176118ef565b6001600160a01b0381166000908152600f602052604090205460ff16610f4f5760405162461bcd60e51b815260040161028990612007565b6001546001600160a01b03848116911614610f7c5760405162461bcd60e51b815260040161028990612443565b6000610f888484610b6b565b9050600254811015610fac5760405162461bcd60e51b8152600401610289906123e0565b601054610fb990826118f3565b60108190556008541015610fdf5760405162461bcd60e51b815260040161028990612546565b610fef81600d60006108556118ef565b600d6000610ffb6118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600354600d600061102e6118ef565b6001600160a01b03166001600160a01b0316815260200190815260200160002054111561106d5760405162461bcd60e51b8152600401610289906125f5565b61108a6110786118ef565b6001600160a01b038616903086611a09565b6110926118ef565b6001600160a01b03167f8daf503382665d950e449b86172be5222275c90f4ddf69c29fdaa8237a562a6d8585846040516110ce93929190611f6b565b60405180910390a250505050565b60045481565b6001600160a01b0381166000908152600e6020526040812054610abf90610ddf84611a30565b611110611466565b6001600160a01b03166111216118ef565b6001600160a01b0316148061115057506013546001600160a01b03166111456118ef565b6001600160a01b0316145b61116c5760405162461bcd60e51b81526004016102899061206c565b601155565b611179610741565b156111965760405162461bcd60e51b8152600401610289906124aa565b6009546111b55760405162461bcd60e51b815260040161028990612231565b60006111c261044a6118ef565b9050600081116111e45760405162461bcd60e51b81526004016102899061217d565b6111f481600e60006108556118ef565b600e60006112006118ef565b6001600160a01b031681526020810191909152604001600020556112386112256118ef565b600b546001600160a01b031690836119b3565b6112406118ef565b6001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051611278919061262c565b60405180910390a250565b600d6020526000908152604090205481565b60025481565b60085481565b6112a96118ef565b6001600160a01b03166112ba611466565b6001600160a01b0316146112e05760405162461bcd60e51b8152600401610289906123ab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b6113416118ef565b6001600160a01b0316611352611466565b6001600160a01b0316146113785760405162461bcd60e51b8152600401610289906123ab565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6113a26118ef565b6001600160a01b03166113b3611466565b6001600160a01b0316146113d95760405162461bcd60e51b8152600401610289906123ab565b600355565b600c5481565b6001546001600160a01b031681565b6113fb610741565b6114175760405162461bcd60e51b815260040161028990612133565b61141f61075b565b1561143c5760405162461bcd60e51b81526004016102899061231b565b6000341161145c5760405162461bcd60e51b815260040161028990612386565b61146461076b565b565b6000546001600160a01b031690565b61147d6118ef565b6001600160a01b031661148e611466565b6001600160a01b0316146114b45760405162461bcd60e51b8152600401610289906123ab565b611464611ac2565b60065481565b620f424081565b6114d16118ef565b6001600160a01b03166114e2611466565b6001600160a01b0316146115085760405162461bcd60e51b8152600401610289906123ab565b600255565b6115156118ef565b6001600160a01b0316611526611466565b6001600160a01b03161461154c5760405162461bcd60e51b8152600401610289906123ab565b611464611b33565b60115481565b6001600160a01b03166000908152600e602052604090205490565b6000610abf61158383611a30565b6001600160a01b0384166000908152600d60205260409020549061198b565b6115aa6118ef565b6001600160a01b03166115bb611466565b6001600160a01b0316146115e15760405162461bcd60e51b8152600401610289906123ab565b60005b82518110156116385781600f60008584815181106115fe57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016115e4565b505050565b6116456118ef565b6001600160a01b0316611656611466565b6001600160a01b03161461167c5760405162461bcd60e51b8152600401610289906123ab565b600455565b600f6020526000908152604090205460ff1681565b61169e6118ef565b6001600160a01b03166116af611466565b6001600160a01b0316146116d55760405162461bcd60e51b8152600401610289906123ab565b6001600160a01b0382166000908152600d60205260409020546116f890826118f3565b6001600160a01b039092166000908152600d602052604090209190915550565b6117206118ef565b6001600160a01b0316611731611466565b6001600160a01b0316146117575760405162461bcd60e51b8152600401610289906123ab565b61175f610741565b1561177c5760405162461bcd60e51b8152600401610289906124aa565b6000471161179c5760405162461bcd60e51b815260040161028990612417565b6012546040516000916001600160a01b03169047906117ba90611f54565b60006040518083038185875af1925050503d80600081146117f7576040519150601f19603f3d011682016040523d82523d6000602084013e6117fc565b606091505b505090508061181d5760405162461bcd60e51b8152600401610289906120d3565b50565b6118286118ef565b6001600160a01b0316611839611466565b6001600160a01b03161461185f5760405162461bcd60e51b8152600401610289906123ab565b6001600160a01b0381166118855760405162461bcd60e51b81526004016102899061208d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031681565b3390565b6000828201838110156119185760405162461bcd60e51b8152600401610289906120fc565b9392505050565b60008261192e57506000610c15565b8282028284828161193b57fe5b04146119185760405162461bcd60e51b815260040161028990612345565b600080821161197a5760405162461bcd60e51b815260040161028990612268565b81838161198357fe5b049392505050565b6000828211156119ad5760405162461bcd60e51b8152600401610289906121b4565b50900390565b6116388363a9059cbb60e01b84846040516024016119d2929190611fb0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b94565b611a2a846323b872dd60e01b8585856040516024016119d293929190611f8c565b50505050565b600060095460001480611a44575060095442105b15611a5157506000610ac2565b600a54600954611a60916118f3565b4210611a8557506001600160a01b0381166000908152600d6020526040902054610ac2565b610abf600a54610a95611aa36009544261198b90919063ffffffff16565b6001600160a01b0386166000908152600d60205260409020549061191f565b611aca61075b565b611ae65760405162461bcd60e51b81526004016102899061203e565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b1c6118ef565b604051611b299190611f57565b60405180910390a1565b611b3b61075b565b15611b585760405162461bcd60e51b81526004016102899061231b565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b1c6118ef565b6060611be9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c239092919063ffffffff16565b8051909150156116385780806020019051810190611c079190611e7a565b6116385760405162461bcd60e51b815260040161028990612574565b6060611c328484600085611c3a565b949350505050565b606082471015611c5c5760405162461bcd60e51b8152600401610289906121eb565b611c6585611cfb565b611c815760405162461bcd60e51b81526004016102899061250f565b60006060866001600160a01b03168587604051611c9e9190611f38565b60006040518083038185875af1925050503d8060008114611cdb576040519150601f19603f3d011682016040523d82523d6000602084013e611ce0565b606091505b5091509150611cf0828286611d01565b979650505050505050565b3b151590565b60608315611d10575081611918565b825115611d205782518084602001fd5b8160405162461bcd60e51b81526004016102899190611fd4565b80356001600160a01b0381168114610c1557600080fd5b8035610c1581612688565b805169ffffffffffffffffffff81168114610c1557600080fd5b600060208284031215611d87578081fd5b6119188383611d3a565b60008060408385031215611da3578081fd5b611dad8484611d3a565b946020939093013593505050565b60008060408385031215611dcd578182fd5b823567ffffffffffffffff80821115611de4578384fd5b818501915085601f830112611df7578384fd5b813581811115611e05578485fd5b60209150818102611e17838201612635565b8281528381019085850183870186018b1015611e31578889fd5b8896505b84871015611e5b57611e478b82611d3a565b835260019690960195918501918501611e35565b5080975050505050611e6f86828701611d51565b925050509250929050565b600060208284031215611e8b578081fd5b815161191881612688565b600060208284031215611ea7578081fd5b5035919050565b600060208284031215611ebf578081fd5b5051919050565b600080600080600060a08688031215611edd578081fd5b611ee78787611d5c565b9450602086015193506040860151925060608601519150611f0b8760808801611d5c565b90509295509295909350565b600060208284031215611f28578081fd5b815160ff81168114611918578182fd5b60008251611f4a81846020870161265c565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611ff381604085016020870161265c565b601f01601f19169190910160400192915050565b6020808252601f908201527f41646472657373206973206e6f74206f6e207468652077686974656c69737400604082015260600190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526007908201526610a5b2b2b832b960c91b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252602a908201527f5072697661746553616c652073746167657320617265206f766572206f72206e6040820152691bdd081cdd185c9d195960b21b606082015260800190565b6020808252601f908201527f546f6b656e56657374696e673a206e6f20746f6b656e73206172652064756500604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526018908201527f56657374696e67207374617274206973206e6f74207365740000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526017908201527f4761732070726963652065786365656473206c696d6974000000000000000000604082015260600190565b60208082526025908201527f4e6f7420656e6f75676820746f6b656e20696e207072697661746520736c6165604082015264081c1bdbdb60da1b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252600b908201526a139bc8115512081cd95b9d60aa1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f4d696e696d756d20726571756972656420756e72656163686564000000000000604082015260600190565b6020808252601290820152714e6f2045544820746f20776974686472617760701b604082015260600190565b602080825260169082015275436f696e206973206e6f7420737570706f727465642160501b604082015260600190565b60208082526017908201527f496e636f72726563742074696d652070726f7669646564000000000000000000604082015260600190565b60208082526017908201527f5072697661746553616c65206973206e6f74206f766572000000000000000000604082015260600190565b6020808252601490820152734e6f20455243323020746f20776974686472617760601b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260149082015273546f6b656e206973206e6f7420656e6f7567682160601b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601c908201527f56657374696e6720737461727420697320616c72656164792073657400000000604082015260600190565b60208082526018908201527f4d6178696d756d20616c6c6f7765642065786365656465640000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561265457600080fd5b604052919050565b60005b8381101561267757818101518382015260200161265f565b83811115611a2a5750506000910152565b801515811461181d57600080fdfea2646970667358221220c40634a523ca66ec0c9e343c673fb0d9d449076826711a5dd1672d49dd0c2e6e64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "adminSetBasePrice(uint256)": {
        "params": {
          "_price": "The price of ETH multiple by precision (e.g. _rate = PRECISION corresponds to $1)"
        }
      },
      "adminSetMaxGasPrice(uint256)": {
        "params": {
          "_maxGasPrice": "New max gas price"
        }
      },
      "adminSetMaxToken(uint256)": {
        "params": {
          "_maxToken": "New max token amount"
        }
      },
      "adminSetMinToken(uint256)": {
        "params": {
          "_minToken": "New min token amount"
        }
      },
      "adminSetPriceFeed(address)": {
        "params": {
          "_priceFeed": "New priceFeed"
        }
      },
      "adminSetTreasury(address)": {
        "params": {
          "_treasury": "New treasury address"
        }
      },
      "adminSetVestingStart(uint256)": {
        "params": {
          "_vestingStart": "New vesting start time"
        }
      },
      "adminWithdrawERC20(address)": {
        "params": {
          "ERC20token": "Address of ERC20 token to withdraw from the contract"
        }
      },
      "calcCoinPurchasedAmount(address,uint256)": {
        "details": "Calculates token amount based on amount of token.",
        "params": {
          "_amount": "Coin amount to convert to token",
          "_coin": "Supported ERC20 token"
        },
        "returns": {
          "_0": "purchasedAmount Token amount to buy"
        }
      },
      "calcEthPurchasedAmount(uint256)": {
        "details": "Calculates Token amount based on rate and ETH amount.",
        "params": {
          "_amount": "ETH amount to convert to token"
        },
        "returns": {
          "_0": "Token amount"
        }
      },
      "claimable(address)": {
        "params": {
          "_user": "Address of the user who purchased tokens"
        },
        "returns": {
          "_0": "The amount of the token vested and unclaimed."
        }
      },
      "claimed(address)": {
        "params": {
          "_user": "Address of the user who purchased tokens"
        },
        "returns": {
          "_0": "The amount of the token claimed."
        }
      },
      "locked(address)": {
        "params": {
          "_user": "Address of the user who purchased tokens"
        },
        "returns": {
          "_0": "The amount of the token vested and unclaimed."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "purchaseTokenWithCoin(address,uint256)": {
        "params": {
          "amount": "Amount of the token to be paid in",
          "coin": "Address of the token to be paid in"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokenPurchased(address,address,uint256,uint256)": {
        "notice": "EVENTS*"
      }
    },
    "kind": "user",
    "methods": {
      "USDC()": {
        "notice": "CONSTANTS*"
      },
      "adminPause()": {
        "notice": "Stops purchase functions. Owner only"
      },
      "adminSetBasePrice(uint256)": {
        "notice": "Sets the rate based on the contracts precision"
      },
      "adminSetMaxGasPrice(uint256)": {
        "notice": "Allows owner to change the max allowed gas price. Prevents gas wars"
      },
      "adminSetMaxToken(uint256)": {
        "notice": "Allows owner to change max allowed token per address."
      },
      "adminSetMinToken(uint256)": {
        "notice": "Allows owner to change min allowed token to buy per tx."
      },
      "adminSetPriceFeed(address)": {
        "notice": "Updates current priceFeed of chainlink."
      },
      "adminSetTreasury(address)": {
        "notice": "Allows owner to change the treasury address. Treasury is the address where all funds from sale go to"
      },
      "adminSetVestingStart(uint256)": {
        "notice": "Updates current vesting start time. Can be used once"
      },
      "adminUnpause()": {
        "notice": "Unpauses purchase functions. Owner only"
      },
      "adminWithdrawERC20(address)": {
        "notice": "Function for the administrator to withdraw tokenWithdrawals allowed only if there is no sale pending stage"
      },
      "adminWithdrawETH()": {
        "notice": "Function for the administrator to withdraw ETH for refundsWithdrawals allowed only if there is no sale pending stage"
      },
      "claim()": {
        "notice": "Transfers available for claim vested tokens to the user."
      },
      "claimable(address)": {
        "notice": "Calculates the amount that has already vested but hasn't been claimed yet."
      },
      "claimed(address)": {
        "notice": "Gets the amount of tokens the user has already claimed"
      },
      "locked(address)": {
        "notice": "Calculates the amount that is still locked."
      },
      "purchaseTokenWithCoin(address,uint256)": {
        "notice": "For purchase with allowed stablecoin (USDC)"
      },
      "purchaseTokenWithETH()": {
        "notice": "For purchase with ETH. ETH is left on the contract until withdrawn to treasury"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2217,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2388,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "USDC",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2402,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "minTokensAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2404,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "maxTokensAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2406,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "maxGasPrice",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2408,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "priceFeed",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(AggregatorV3Interface)2358"
      },
      {
        "astId": 2410,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "privateSaleStart",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2412,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "privateSaleEnd",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2414,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "privateSaleTokenPool",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2416,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "vestingStart",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2418,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "vestingDuration",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2420,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "token",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 2422,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "tokenPrice",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2426,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "purchased",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2430,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "_claimed",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2434,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "whitelisted",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2436,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "purchasedPrivateSale",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 2438,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "basePrice",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 2440,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "treasury",
        "offset": 0,
        "slot": "18",
        "type": "t_address"
      },
      {
        "astId": 2442,
        "contract": "contracts/ifo/EMOPrivateSale.sol:EMOPrivateSale",
        "label": "keeper",
        "offset": 0,
        "slot": "19",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)2358": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}